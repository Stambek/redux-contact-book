{"version":3,"sources":["components/contacts/Contact.js","actions/contactAction.js","constant/types.js","components/contacts/Contacts.js","components/elements/Navbar.js","reducers/contactReducer.js","reducers/index.js","store.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Contact","contact","selectAll","dispatch","useDispatch","name","phone","email","id","className","checked","type","size","round","to","onClick","payload","deleteContact","Contacts","useState","setSelectAll","contacts","useSelector","state","selectedContacts","useEffect","map","value","htmlFor","key","Navbar","initialState","combineReducers","action","arr","filter","values","val","store","createStore","rootReducer","composeWithDevTools","AddContact","history","useHistory","setName","setEmail","setPhone","onSubmit","e","preventDefault","new_contact","shortid","generate","push","createContact","placeholder","onChange","target","EditContact","useParams","getContact","update_contact","Object","assign","console","log","updateContact","onUpdateContact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wSAiCeA,EA3BC,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UACnBC,EAAWC,cACTC,EAA2BJ,EAA3BI,KAAMC,EAAqBL,EAArBK,MAAOC,EAAcN,EAAdM,MAAOC,EAAOP,EAAPO,GAC5B,OACE,4BACI,4BACI,yBAAKC,UAAU,kCACX,2BAAOC,QAASR,EAAWS,KAAK,WAAWF,UAAU,yBACrD,2BAAOA,UAAU,2BAGzB,4BAAI,kBAAC,IAAD,CAAQA,UAAU,OAAOJ,KAAMA,EAAMO,KAAK,KAAKC,OAAO,IAAQR,GAClE,4BAAKC,GACL,4BAAKC,GACL,wBAAIE,UAAU,WACZ,kBAAC,IAAD,CAAMK,GAAE,yBAAoBN,IAC1B,0BAAMC,UAAU,uBAAhB,SAEF,kBAAC,IAAD,KACE,0BAAMA,UAAU,6BAA6BM,QAAS,kBAAKZ,ECJ1C,SAACK,GAAD,MAAS,CACpCG,KCnB4B,iBDoB5BK,QAASR,GDGIS,CAAcT,MADjB,qBGgCGU,EAnDE,WACb,IAAMf,EAAWC,cADE,EAEee,oBAAS,GAFxB,mBAEZjB,EAFY,KAEDkB,EAFC,KAGbC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMtB,QAAQoB,YAC7BC,aAAY,SAACC,GAAD,OAAWA,EAAMC,oBAUtD,OARAC,qBAAU,WAEFtB,EADDD,EFe8B,CACvCS,KCzB4B,iBD0B5BK,QEhBoCK,EAASK,KAAI,SAACzB,GAAD,OAAaA,EAAQO,OFoBlC,CACpCG,KC9B2B,oBCatB,CAACT,IAGA,6BAEI,2BAAOO,UAAU,gBACb,+BACI,4BACI,4BACI,yBAAKA,UAAU,kCACX,2BACAD,GAAG,YACHG,KAAK,WACLF,UAAU,uBACVkB,MAAOzB,EACPa,QAAS,kBAAMK,GAAclB,MAE7B,2BACA0B,QAAQ,YACRnB,UAAU,2BAIlB,oCACA,qCACA,sCACA,yCAGR,+BACCY,EAASK,KAAI,SAAAzB,GAAO,OACjB,kBAAC,EAAD,CAASA,QAASA,EAAS4B,IAAK5B,EAAQO,GAAIN,UAAWA,WC/B5D4B,EAfA,WACX,OACI,yBAAKrB,UAAU,oEACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,2BAAvB,gBAGA,6BACI,kBAAC,IAAD,CAAMK,GAAG,gBAAgBL,UAAU,yBAAnC,sB,oDCTdsB,EAAe,CACnBV,SAAU,CACN,CACI,GAAM,EACN,KAAQ,gBACR,SAAY,OACZ,MAAS,oBACT,QAAW,CACT,OAAU,cACV,MAAS,WACT,KAAQ,cACR,QAAW,aACX,IAAO,CACL,IAAO,WACP,IAAO,YAGX,MAAS,wBACT,QAAW,gBACX,QAAW,CACT,KAAQ,kBACR,YAAe,yCACf,GAAM,gCAGV,CACE,GAAM,EACN,KAAQ,eACR,SAAY,YACZ,MAAS,oBACT,QAAW,CACT,OAAU,gBACV,MAAS,YACT,KAAQ,cACR,QAAW,aACX,IAAO,CACL,IAAO,WACP,IAAO,aAGX,MAAS,sBACT,QAAW,gBACX,QAAW,CACT,KAAQ,eACR,YAAe,iCACf,GAAM,qCAGV,CACE,GAAM,EACN,KAAQ,mBACR,SAAY,WACZ,MAAS,qBACT,QAAW,CACT,OAAU,oBACV,MAAS,YACT,KAAQ,gBACR,QAAW,aACX,IAAO,CACL,IAAO,WACP,IAAO,aAGX,MAAS,iBACT,QAAW,cACX,QAAW,CACT,KAAQ,qBACR,YAAe,oCACf,GAAM,oCAGV,CACE,GAAM,EACN,KAAQ,mBACR,SAAY,WACZ,MAAS,4BACT,QAAW,CACT,OAAU,cACV,MAAS,WACT,KAAQ,cACR,QAAW,aACX,IAAO,CACL,IAAO,UACP,IAAO,cAGX,MAAS,oBACT,QAAW,WACX,QAAW,CACT,KAAQ,gBACR,YAAe,2CACf,GAAM,yCAGV,CACE,GAAM,EACN,KAAQ,mBACR,SAAY,SACZ,MAAS,2BACT,QAAW,CACT,OAAU,eACV,MAAS,YACT,KAAQ,aACR,QAAW,QACX,IAAO,CACL,IAAO,WACP,IAAO,YAGX,MAAS,gBACT,QAAW,eACX,QAAW,CACT,KAAQ,cACR,YAAe,uCACf,GAAM,qCAGV,CACE,GAAM,EACN,KAAQ,uBACR,SAAY,mBACZ,MAAS,0BACT,QAAW,CACT,OAAU,oBACV,MAAS,WACT,KAAQ,gBACR,QAAW,aACX,IAAO,CACL,IAAO,WACP,IAAO,YAGX,MAAS,uBACT,QAAW,UACX,QAAW,CACT,KAAQ,oBACR,YAAe,qCACf,GAAM,qCAGV,CACE,GAAM,EACN,KAAQ,kBACR,SAAY,eACZ,MAAS,yBACT,QAAW,CACT,OAAU,YACV,MAAS,YACT,KAAQ,YACR,QAAW,aACX,IAAO,CACL,IAAO,UACP,IAAO,YAGX,MAAS,eACT,QAAW,WACX,QAAW,CACT,KAAQ,cACR,YAAe,qCACf,GAAM,kCAGV,CACE,GAAM,EACN,KAAQ,2BACR,SAAY,gBACZ,MAAS,uBACT,QAAW,CACT,OAAU,mBACV,MAAS,YACT,KAAQ,YACR,QAAW,QACX,IAAO,CACL,IAAO,WACP,IAAO,cAGX,MAAS,oBACT,QAAW,eACX,QAAW,CACT,KAAQ,kBACR,YAAe,gCACf,GAAM,kCAGV,CACE,GAAM,EACN,KAAQ,kBACR,SAAY,WACZ,MAAS,0BACT,QAAW,CACT,OAAU,aACV,MAAS,YACT,KAAQ,iBACR,QAAW,aACX,IAAO,CACL,IAAO,UACP,IAAO,cAGX,MAAS,uBACT,QAAW,aACX,QAAW,CACT,KAAQ,gBACR,YAAe,wCACf,GAAM,qCAGV,CACE,GAAM,GACN,KAAQ,qBACR,SAAY,iBACZ,MAAS,yBACT,QAAW,CACT,OAAU,kBACV,MAAS,YACT,KAAQ,cACR,QAAW,aACX,IAAO,CACL,IAAO,WACP,IAAO,YAGX,MAAS,eACT,QAAW,cACX,QAAW,CACT,KAAQ,aACR,YAAe,oCACf,GAAM,8BAIhBpB,QAAS,KACTuB,iBAAkB,ICzOLQ,4BAAgB,CAC7B/B,QD2O4B,WAAmC,IAAlCsB,EAAiC,uDAAzBQ,EAAcE,EAAW,uCAC9D,OAAOA,EAAOtB,MACZ,IHjP0B,iBGkPxB,OAAO,eACFY,EADL,CAEEF,SAAS,CAAEY,EAAOjB,SAAV,mBAAsBO,EAAMF,aAExC,IHrPuB,cGsPrB,IAAIa,EAAMX,EAAMF,SAASc,QAAO,SAAClC,GAAD,OAAaA,EAAQO,IAAMyB,EAAOjB,WAClEkB,EAAMA,EAAIE,SAFZ,oBAGkBF,GAHlB,IAGE,2BAAoB,CAAC,IAAZG,EAAW,QAClBH,EAAMG,GAJV,8BAME,OAAO,eACFd,EADL,CAEEtB,QAASiC,IAEb,IH9P0B,iBG+PxB,OAAO,eACFX,EADL,CAEEF,SAAUE,EAAMF,SAASK,KAAI,SAACzB,GAAD,OAC3BA,EAAQO,IAAMyB,EAAOjB,QAAQR,GAAKyB,EAAOjB,QAAUf,OAGzD,IHpQ0B,iBGqQxB,OAAO,eACFsB,EADL,CAEEF,SAAUE,EAAMF,SAASc,QAAO,SAAClC,GAAD,OAAaA,EAAQO,IAAMyB,EAAOjB,aAEtE,IHxQ0B,iBGyQxB,OAAO,eACFO,EADL,CAEEC,iBAAkBS,EAAOjB,UAE7B,IH5QyB,gBG6QvB,sBACKO,EADL,CAEEC,iBAAkB,KAEpB,QACA,OAAOD,MEjREe,EAFDC,sBAAYC,EAAaC,iC,wBC8DxBC,EA5DI,WACjB,IAAIC,EAAUC,cACRzC,EAAWC,cAFM,EAGCe,mBAAS,IAHV,mBAGhBd,EAHgB,KAGVwC,EAHU,OAIG1B,mBAAS,IAJZ,mBAIhBZ,EAJgB,KAITuC,EAJS,OAKG3B,mBAAS,IALZ,mBAKhBb,EALgB,KAKTyC,EALS,KAmBvB,OACE,yBAAKtC,UAAU,wBACb,yBAAKA,UAAU,eAAf,iBACA,yBAAKA,UAAU,aACb,0BAAMuC,SAAU,SAACC,GAAD,OAhBA,SAACA,GACrBA,EAAEC,iBACF,IAAMC,EAAc,CAClB3C,GAAI4C,IAAQC,WACZhD,KAAMA,EACNC,MAAOA,EACPC,MAAOA,GAETJ,EPlBmC,CACnCQ,KCJ0B,iBDK1BK,QOgBoBmC,IACpBR,EAAQW,KAAK,KAOcC,CAAcN,KACnC,yBAAKxC,UAAU,cACb,2BACAE,KAAK,OACLF,UAAU,eACV+C,YAAY,kBACZ7B,MAAOtB,EACPoD,SAAU,SAACR,GAAD,OAAOJ,EAAQI,EAAES,OAAO/B,WAGpC,yBAAKlB,UAAU,cACb,2BACAE,KAAK,OACLF,UAAU,eACV+C,YAAY,0BACZ7B,MAAOrB,EACPmD,SAAU,SAACR,GAAD,OAAOF,EAASE,EAAES,OAAO/B,WAGrC,yBAAKlB,UAAU,cACb,2BACAE,KAAK,OACLF,UAAU,eACV+C,YAAY,2BACZ7B,MAAOpB,EACPkD,SAAU,SAACR,GAAD,OAAOH,EAASG,EAAES,OAAO/B,WAGrC,4BAAQlB,UAAU,kBAAkBE,KAAK,UAAzC,sBCwBKgD,EA1EK,WAAO,IACpBnD,EAAMoD,cAANpD,GACDmC,EAAUC,cACRzC,EAAWC,cACXH,EAAUqB,aAAY,SAACC,GAAD,OAAWA,EAAMtB,QAAQA,WAJ7B,EAKAkB,mBAAS,IALT,mBAKjBd,EALiB,KAKXwC,EALW,OAME1B,mBAAS,IANX,mBAMjBZ,EANiB,KAMVuC,EANU,OAOE3B,mBAAS,IAPX,mBAOjBb,EAPiB,KAOVyC,EAPU,KAWxBtB,qBAAU,WACM,MAAXxB,IACD4C,EAAQ5C,EAAQI,MAChB0C,EAAS9C,EAAQK,OACjBwC,EAAS7C,EAAQM,QAEnBJ,ERfsB,SAACK,GAAD,MAAS,CACjCG,KCTyB,cDUzBK,QAASR,GQaEqD,CAAWrD,MACnB,CAACP,IAeJ,OACE,yBAAKQ,UAAU,wBACb,yBAAKA,UAAU,eAAf,iBACA,yBAAKA,UAAU,aACb,0BAAMuC,SAAU,SAACC,GAAD,OAjBE,SAACA,GACvBA,EAAEC,iBAGJ,IAAMY,EAAiBC,OAAOC,OAAO/D,EAAS,CAC5CI,KAAMA,EACNC,MAAOA,EACPC,MAAOA,IAET0D,QAAQC,IAAIJ,GACZ3D,ERtB2B,SAACF,GAAD,MAAc,CACzCU,KCd4B,iBDe5BK,QAASf,GQoBAkE,CAAcL,IACvBnB,EAAQW,KAAK,KAMec,CAAgBnB,KACpC,yBAAKxC,UAAU,cACb,2BACAE,KAAK,OACLF,UAAU,eACV+C,YAAY,kBACZ7B,MAAOtB,EACPoD,SAAU,SAACR,GAAD,OAAOJ,EAAQI,EAAES,OAAO/B,WAGpC,yBAAKlB,UAAU,cACb,2BACAE,KAAK,OACLF,UAAU,eACV+C,YAAY,0BACZ7B,MAAOrB,EACPmD,SAAU,SAACR,GAAD,OAAOF,EAASE,EAAES,OAAO/B,WAGrC,yBAAKlB,UAAU,cACb,2BACAE,KAAK,OACLF,UAAU,eACV+C,YAAY,2BACZ7B,MAAOpB,EACPkD,SAAU,SAACR,GAAD,OAAOH,EAASG,EAAES,OAAO/B,WAGrC,4BAAQlB,UAAU,kBAAkBE,KAAK,UAAzC,sBCvCK0D,MAvBf,WACE,OACE,kBAAC,IAAD,CAAU/B,MAAOA,GACjB,kBAAC,IAAD,KACA,yBAAK7B,UAAU,OACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjC,kBAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,gBAAgBC,UAAW9B,IAC7C,kBAAC,IAAD,CACA4B,OAAK,EAACC,KAAK,qBACXC,UAAWb,WCXLc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzB,QAAQyB,MAAMA,EAAMC,c","file":"static/js/main.ca268f8e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteContact } from '../../actions/contactAction';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Contact = ({contact, selectAll}) => {\r\n  const dispatch = useDispatch();\r\n  const { name, phone, email, id } = contact;\r\n  return (\r\n    <tr>\r\n        <td>\r\n            <div className=\"custom-control custom-checkbox\">\r\n                <input checked={selectAll} type=\"checkbox\" className=\"custom-control-input\"/>\r\n                <label className=\"custom-control-label\"></label>\r\n            </div>\r\n        </td>\r\n        <td><Avatar className=\"mr-2\" name={name} size=\"45\" round={true}/>{name}</td>\r\n        <td>{phone}</td>\r\n        <td>{email}</td>\r\n        <td className=\"actions\">\r\n          <Link to={`/contacts/edit/${id}`}>\r\n            <span className=\"material-icons mr-2\">edit</span>\r\n          </Link>\r\n          <Link>\r\n            <span className=\"material-icons text-danger\" onClick={()=> dispatch\r\n              (deleteContact(id))}>remove_circle</span>\r\n          </Link>\r\n        </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Contact;\r\n","import { CREATE_CONTACT, GET_CONTACT, UPDATE_CONTACT, DELETE_CONTACT, SELECT_CONTACT, CLEAR_CONTACT } from \"../constant/types\";\r\n\r\n// actions\r\nexport const addContact = (contact) =>({\r\n    type: CREATE_CONTACT,\r\n    payload: contact,\r\n});\r\n\r\n//get a contact\r\nexport const getContact = (id) => ({\r\n  type: GET_CONTACT,\r\n  payload: id,\r\n});\r\n\r\n//update contact\r\nexport const updateContact = (contact) => ({\r\n  type: UPDATE_CONTACT,\r\n  payload: contact,\r\n});\r\n\r\n//delete contact\r\nexport const deleteContact = (id) => ({\r\n  type: DELETE_CONTACT,\r\n  payload: id,\r\n})\r\n\r\n//select all contact\r\n\r\nexport const selectAllContact = (id) => ({\r\n  type: SELECT_CONTACT,\r\n  payload: id,\r\n})\r\n\r\n//clear selected contacts\r\nexport const clearAllContact = () => ({\r\n  type: CLEAR_CONTACT,\r\n})\r\n\r\n","export const CREATE_CONTACT = \"CREATE_CONTACT\";\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const SELECT_CONTACT = 'SELECT_CONTACT';\r\nexport const CLEAR_CONTACT = 'CLEAR_CONTACT';","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Contact from './Contact';\r\nimport {selectAllContact, clearAllContact} from '../../actions/contactAction'\r\n\r\n\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch();\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const contacts = useSelector((state) => state.contact.contacts);\r\n    const selectedContacts = useSelector((state) => state.selectedContacts);\r\n\r\n    useEffect(()=>{\r\n        if(selectAll){\r\n            dispatch(selectAllContact(contacts.map((contact) => contact.id)))\r\n        } else {\r\n            dispatch(clearAllContact());\r\n        }\r\n    }, [selectAll]);\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <table className=\"table shadow\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input \r\n                                id=\"selectAll\" \r\n                                type=\"checkbox\"\r\n                                className=\"custom-control-input\"\r\n                                value={selectAll}\r\n                                onClick={() => setSelectAll(!selectAll)}\r\n                                />\r\n                                <label \r\n                                htmlFor=\"selectAll\" \r\n                                className=\"custom-control-label\"\r\n                                ></label>\r\n                            </div>\r\n                        </th>\r\n                        <th>Name</th>\r\n                        <th>Phone</th>\r\n                        <th>E-mail</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {contacts.map(contact => (\r\n                    <Contact contact={contact} key={contact.id} selectAll={selectAll}/>\r\n                ))}   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport {Limk, Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar shadow fixed-top navbar-expand-sm navbark-dark bg-primary\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand text-light\">\r\n                    Contact Book\r\n                </Link>\r\n                <div>\r\n                    <Link to=\"/contacts/add\" className=\"btn btn-light ml-auto\">Create Contact</Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { CREATE_CONTACT, GET_CONTACT, UPDATE_CONTACT, DELETE_CONTACT, SELECT_CONTACT, CLEAR_CONTACT } from '../constant/types';\r\n\r\nconst initialState = {\r\n  contacts: [\r\n      {\r\n          \"id\": 1,\r\n          \"name\": \"Leanne Graham\",\r\n          \"username\": \"Bret\",\r\n          \"email\": \"Sincere@april.biz\",\r\n          \"address\": {\r\n            \"street\": \"Kulas Light\",\r\n            \"suite\": \"Apt. 556\",\r\n            \"city\": \"Gwenborough\",\r\n            \"zipcode\": \"92998-3874\",\r\n            \"geo\": {\r\n              \"lat\": \"-37.3159\",\r\n              \"lng\": \"81.1496\"\r\n            }\r\n          },\r\n          \"phone\": \"1-770-736-8031 x56442\",\r\n          \"website\": \"hildegard.org\",\r\n          \"company\": {\r\n            \"name\": \"Romaguera-Crona\",\r\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n            \"bs\": \"harness real-time e-markets\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"Ervin Howell\",\r\n          \"username\": \"Antonette\",\r\n          \"email\": \"Shanna@melissa.tv\",\r\n          \"address\": {\r\n            \"street\": \"Victor Plains\",\r\n            \"suite\": \"Suite 879\",\r\n            \"city\": \"Wisokyburgh\",\r\n            \"zipcode\": \"90566-7771\",\r\n            \"geo\": {\r\n              \"lat\": \"-43.9509\",\r\n              \"lng\": \"-34.4618\"\r\n            }\r\n          },\r\n          \"phone\": \"010-692-6593 x09125\",\r\n          \"website\": \"anastasia.net\",\r\n          \"company\": {\r\n            \"name\": \"Deckow-Crist\",\r\n            \"catchPhrase\": \"Proactive didactic contingency\",\r\n            \"bs\": \"synergize scalable supply-chains\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"Clementine Bauch\",\r\n          \"username\": \"Samantha\",\r\n          \"email\": \"Nathan@yesenia.net\",\r\n          \"address\": {\r\n            \"street\": \"Douglas Extension\",\r\n            \"suite\": \"Suite 847\",\r\n            \"city\": \"McKenziehaven\",\r\n            \"zipcode\": \"59590-4157\",\r\n            \"geo\": {\r\n              \"lat\": \"-68.6102\",\r\n              \"lng\": \"-47.0653\"\r\n            }\r\n          },\r\n          \"phone\": \"1-463-123-4447\",\r\n          \"website\": \"ramiro.info\",\r\n          \"company\": {\r\n            \"name\": \"Romaguera-Jacobson\",\r\n            \"catchPhrase\": \"Face to face bifurcated interface\",\r\n            \"bs\": \"e-enable strategic applications\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"Patricia Lebsack\",\r\n          \"username\": \"Karianne\",\r\n          \"email\": \"Julianne.OConner@kory.org\",\r\n          \"address\": {\r\n            \"street\": \"Hoeger Mall\",\r\n            \"suite\": \"Apt. 692\",\r\n            \"city\": \"South Elvis\",\r\n            \"zipcode\": \"53919-4257\",\r\n            \"geo\": {\r\n              \"lat\": \"29.4572\",\r\n              \"lng\": \"-164.2990\"\r\n            }\r\n          },\r\n          \"phone\": \"493-170-9623 x156\",\r\n          \"website\": \"kale.biz\",\r\n          \"company\": {\r\n            \"name\": \"Robel-Corkery\",\r\n            \"catchPhrase\": \"Multi-tiered zero tolerance productivity\",\r\n            \"bs\": \"transition cutting-edge web services\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 5,\r\n          \"name\": \"Chelsey Dietrich\",\r\n          \"username\": \"Kamren\",\r\n          \"email\": \"Lucio_Hettinger@annie.ca\",\r\n          \"address\": {\r\n            \"street\": \"Skiles Walks\",\r\n            \"suite\": \"Suite 351\",\r\n            \"city\": \"Roscoeview\",\r\n            \"zipcode\": \"33263\",\r\n            \"geo\": {\r\n              \"lat\": \"-31.8129\",\r\n              \"lng\": \"62.5342\"\r\n            }\r\n          },\r\n          \"phone\": \"(254)954-1289\",\r\n          \"website\": \"demarco.info\",\r\n          \"company\": {\r\n            \"name\": \"Keebler LLC\",\r\n            \"catchPhrase\": \"User-centric fault-tolerant solution\",\r\n            \"bs\": \"revolutionize end-to-end systems\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 6,\r\n          \"name\": \"Mrs. Dennis Schulist\",\r\n          \"username\": \"Leopoldo_Corkery\",\r\n          \"email\": \"Karley_Dach@jasper.info\",\r\n          \"address\": {\r\n            \"street\": \"Norberto Crossing\",\r\n            \"suite\": \"Apt. 950\",\r\n            \"city\": \"South Christy\",\r\n            \"zipcode\": \"23505-1337\",\r\n            \"geo\": {\r\n              \"lat\": \"-71.4197\",\r\n              \"lng\": \"71.7478\"\r\n            }\r\n          },\r\n          \"phone\": \"1-477-935-8478 x6430\",\r\n          \"website\": \"ola.org\",\r\n          \"company\": {\r\n            \"name\": \"Considine-Lockman\",\r\n            \"catchPhrase\": \"Synchronised bottom-line interface\",\r\n            \"bs\": \"e-enable innovative applications\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 7,\r\n          \"name\": \"Kurtis Weissnat\",\r\n          \"username\": \"Elwyn.Skiles\",\r\n          \"email\": \"Telly.Hoeger@billy.biz\",\r\n          \"address\": {\r\n            \"street\": \"Rex Trail\",\r\n            \"suite\": \"Suite 280\",\r\n            \"city\": \"Howemouth\",\r\n            \"zipcode\": \"58804-1099\",\r\n            \"geo\": {\r\n              \"lat\": \"24.8918\",\r\n              \"lng\": \"21.8984\"\r\n            }\r\n          },\r\n          \"phone\": \"210.067.6132\",\r\n          \"website\": \"elvis.io\",\r\n          \"company\": {\r\n            \"name\": \"Johns Group\",\r\n            \"catchPhrase\": \"Configurable multimedia task-force\",\r\n            \"bs\": \"generate enterprise e-tailers\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 8,\r\n          \"name\": \"Nicholas Runolfsdottir V\",\r\n          \"username\": \"Maxime_Nienow\",\r\n          \"email\": \"Sherwood@rosamond.me\",\r\n          \"address\": {\r\n            \"street\": \"Ellsworth Summit\",\r\n            \"suite\": \"Suite 729\",\r\n            \"city\": \"Aliyaview\",\r\n            \"zipcode\": \"45169\",\r\n            \"geo\": {\r\n              \"lat\": \"-14.3990\",\r\n              \"lng\": \"-120.7677\"\r\n            }\r\n          },\r\n          \"phone\": \"586.493.6943 x140\",\r\n          \"website\": \"jacynthe.com\",\r\n          \"company\": {\r\n            \"name\": \"Abernathy Group\",\r\n            \"catchPhrase\": \"Implemented secondary concept\",\r\n            \"bs\": \"e-enable extensible e-tailers\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 9,\r\n          \"name\": \"Glenna Reichert\",\r\n          \"username\": \"Delphine\",\r\n          \"email\": \"Chaim_McDermott@dana.io\",\r\n          \"address\": {\r\n            \"street\": \"Dayna Park\",\r\n            \"suite\": \"Suite 449\",\r\n            \"city\": \"Bartholomebury\",\r\n            \"zipcode\": \"76495-3109\",\r\n            \"geo\": {\r\n              \"lat\": \"24.6463\",\r\n              \"lng\": \"-168.8889\"\r\n            }\r\n          },\r\n          \"phone\": \"(775)976-6794 x41206\",\r\n          \"website\": \"conrad.com\",\r\n          \"company\": {\r\n            \"name\": \"Yost and Sons\",\r\n            \"catchPhrase\": \"Switchable contextually-based project\",\r\n            \"bs\": \"aggregate real-time technologies\"\r\n          }\r\n        },\r\n        {\r\n          \"id\": 10,\r\n          \"name\": \"Clementina DuBuque\",\r\n          \"username\": \"Moriah.Stanton\",\r\n          \"email\": \"Rey.Padberg@karina.biz\",\r\n          \"address\": {\r\n            \"street\": \"Kattie Turnpike\",\r\n            \"suite\": \"Suite 198\",\r\n            \"city\": \"Lebsackbury\",\r\n            \"zipcode\": \"31428-2261\",\r\n            \"geo\": {\r\n              \"lat\": \"-38.2386\",\r\n              \"lng\": \"57.2232\"\r\n            }\r\n          },\r\n          \"phone\": \"024-648-3804\",\r\n          \"website\": \"ambrose.net\",\r\n          \"company\": {\r\n            \"name\": \"Hoeger LLC\",\r\n            \"catchPhrase\": \"Centralized empowering task-force\",\r\n            \"bs\": \"target end-to-end models\"\r\n          }\r\n        }\r\n  ],\r\n  contact: null,\r\n  selectedContacts: [],\r\n};\r\n\r\nexport const contactReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CREATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case GET_CONTACT:\r\n      let arr = state.contacts.filter((contact) => contact.id == action.payload);\r\n      arr = arr.values();\r\n      for (let val of arr){\r\n        arr = val;\r\n      }\r\n      return {\r\n        ...state,\r\n        contact: arr,\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) => \r\n          contact.id == action.payload.id ? action.payload : contact\r\n          ),\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter((contact) => contact.id != action.payload),\r\n      };\r\n    case SELECT_CONTACT:\r\n      return {\r\n        ...state,\r\n        selectedContacts: action.payload,\r\n      };\r\n    case CLEAR_CONTACT:\r\n      return{\r\n        ...state,\r\n        selectedContacts: [],\r\n      }\r\n      default:\r\n      return state\r\n  }\r\n};","import {combineReducers} from \"redux\";\r\nimport {contactReducer} from \"./contactReducer\";\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer,\r\n});\r\n\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools())\r\n\r\nexport default store;","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addContact} from '../../actions/contactAction';\r\nimport shortid from \"shortid\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst AddContact = () => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const createContact = (e) => {\r\n    e.preventDefault();\r\n    const new_contact = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      phone: phone,\r\n      email: email,\r\n    }\r\n    dispatch(addContact(new_contact));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"card border-0 shadow\">\r\n      <div className=\"card-header\">Add a Contact</div>\r\n      <div className=\"card-body\">\r\n        <form onSubmit={(e) => createContact(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Your Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Your Phone number\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Your E-mail Adress\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Create Contact\r\n          </button> \r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddContact\r\n","import React, {useState, useEffect } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getContact, updateContact} from '../../actions/contactAction';\r\nimport shortid from \"shortid\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst EditContact = () => {\r\n  let {id} = useParams();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const contact = useSelector((state) => state.contact.contact);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if(contact != null){\r\n      setName(contact.name);\r\n      setPhone(contact.phone);\r\n      setEmail(contact.email)\r\n    }\r\n    dispatch(getContact(id));\r\n  }, [contact]);\r\n\r\n  const onUpdateContact = (e) => {\r\n    e.preventDefault();\r\n  \r\n\r\n  const update_contact = Object.assign(contact, {\r\n    name: name, \r\n    phone: phone, \r\n    email: email,\r\n  });\r\n  console.log(update_contact);\r\n  dispatch(updateContact(update_contact));\r\n  history.push(\"/\")\r\n  };\r\n  return (\r\n    <div className=\"card border-0 shadow\">\r\n      <div className=\"card-header\">Add a Contact</div>\r\n      <div className=\"card-body\">\r\n        <form onSubmit={(e)=> onUpdateContact(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Your Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Your Phone number\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Your E-mail Adress\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <button className=\"btn btn-warning\" type=\"submit\">\r\n            Update Contact\r\n          </button> \r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditContact\r\n","import React from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport Navbar from './components/elements/Navbar';\nimport './styles/App.scss';\nimport { Provider, provider } from \"react-redux\";\nimport store from \"./store\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n    <div className=\"App\">\n        <Navbar/>\n        <div className=\"container\">\n          <div className=\"py-3\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contacts/add\" component={AddContact} />\n              <Route \n              exact path=\"/contacts/edit/:id\" \n              component={EditContact} />\n            </Switch>\n          </div>\n        </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}